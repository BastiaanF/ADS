// Merge two sorted integer arrays.
public static int[] merge(int[] arr1, int[] arr2) {
      if(arr1 == null && arr2 == null){
          return null;
      }
      if(arr1 == null){
          return arr2.clone();
      }
      if(arr2 == null){
          return arr1.clone();
      }
    int[] mergeArr = new int[arr1.length + arr2.length];
    
    int i = 0, j = 0, k = 0;

    while(i < arr1.length && j < arr2.length){
        if(arr1[i] < arr2[j]){
            mergeArr[k++] = arr1[i++];
        }
        else{
            mergeArr[k++] = arr2[j++];
        }
    }

    while(i < arr1.length){
        mergeArr[k++] = arr1[i++];
    }

    while(j < arr2.length){
        mergeArr[k++] = arr2[j++];
    }

    return mergeArr;
  }
  
// Reverse an integer array.
public static void reverse(int[] arr) {
    if(arr == null){
        return;
    }
    for(int i = 0; i < arr.length / 2; i++){
        int temp = arr[i];
        arr[i] = arr[arr.length - i - 1];
        arr[arr.length - i - 1] = temp;
    }
  }
  
  //Cloning a two dimensional array.
static double[][] clone(double[][] a) {
    if(a == null){
        return null;
    }
    if(a.length == 0 || a[0].length == 0){
        return new double[0][0];
    }
    double[][] b = new double[a.length][a[0].length];
    for(int i = 0; i < a.length; i++){
        for(int j = 0; j < a[i].length; j++){
            b[i][j] = a[i][j];
        }
    }

    return b;
 }
